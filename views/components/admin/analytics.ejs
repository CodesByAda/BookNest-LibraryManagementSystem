<!-- Analytics Content -->
<div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6">
    <div class="p-6 glass floating">
        <h2 class="text-xl md:text-2xl font-bold"><i class="fas fa-users text-[#316de5]"></i> Total Users</h2>
        <p class="text-gray-600 text-sm md:text-base" id="totalUsers">
            <%= users.length %> Registered Users
        </p>
    </div>
    <div class="p-6 glass floating">
        <h2 class="text-xl md:text-2xl font-bold"><i class="fa-solid fa-person-circle-question text-[#316de5]"></i> Pending Registrations
        </h2>
        <p class="text-gray-600 text-sm md:text-base" id="pendingRequests">
            <%= pendingApprovals %> Requests Pending
        </p>
    </div>
    <div class="p-6 glass floating">
        <h2 class="text-xl md:text-2xl font-bold"><i class="fa-solid fa-arrow-trend-up text-[#316de5]"></i> Stocks Available</h2>
        <p class="text-gray-600 text-sm md:text-base" id="totalBooks">
            <%= totalStockCount %> Books in Stock
        </p>
    </div>
    <div class="p-6 glass floating">
        <h2 class="text-xl md:text-2xl font-bold"><i class="fa-solid fa-book text-[#316de5]"></i> Unique Books</h2>
        <p class="text-gray-600 text-sm md:text-base" id="totalBooks">
            <%= books.length %> Different books
        </p>
    </div>
    <div class="p-6 glass floating">
        <h2 class="text-xl md:text-2xl font-bold"><i class="fas fa-envelope text-[#316de5]"></i> Books Borrowed</h2>
        <p class="text-gray-600 text-sm md:text-base" id="booksBorrowed">
            <%= totalBorrowedBooksCount %> Books Borrowed
        </p>
    </div>
    <div class="p-6 glass floating">
        <h2 class="text-xl md:text-2xl font-bold"><i class="fas fa-envelope text-[#316de5]"></i> Book Requests</h2>
        <p class="text-gray-600 text-sm md:text-base" id="bookRequests">
            <%= pendingApprovals %> Requests for books
        </p>
    </div>
</div>

<!-- Graphs Section -->
<div class="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
    <!-- Line Chart -->
    <div class="p-6 bg-white rounded-xl shadow-md">
        <h2 class="text-xl md:text-2xl font-bold mb-4"><i class="fas fa-chart-line text-[#316de5]"></i> User Growth</h2>
        <canvas id="userChart"></canvas>
    </div>

    <!-- Pie Chart -->
    <div class="p-6 bg-white rounded-xl shadow-md">
        <h2 class="text-xl md:text-2xl font-bold mb-4"><i class="fas fa-chart-bar text-[#316de5]"></i> Book Stats</h2>
        <canvas id="bookStatsChart"></canvas>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<!-- JSON Data -->
<script id="dashboard-data" type="application/json">
    {
        "totalUsers": <%= users.length %>,
        "totalBooks": <%= books.length %>,
        "booksBorrowed": <%= totalBorrowedBooksCount %>,
        "pendingRequests": <%= pendingApprovals %>,
        "bookRequests": <%= pendingApprovals %>
    }
</script>

<script id="book-stats-data" type="application/json">
    {
        "totalStock": <%= totalStockCount %>,
        "uniqueBooks": <%= books.length %>,
        "booksBorrowed": <%= totalBorrowedBooksCount %>,
        "bookRequests": <%= pendingApprovals %>
    }
</script>

<script>
    // ✅ Read the JSON data from the <script> tag
    const data = JSON.parse(document.getElementById("dashboard-data").textContent);
    const bookStats = JSON.parse(document.getElementById("book-stats-data").textContent);

    // ✅ User Growth Chart Data
    const userGrowthData = {
        labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun"],
        datasets: [{
            label: "New Users",
            data: [
                Math.max(0, data.totalUsers - 50),
                Math.max(0, data.totalUsers - 40),
                Math.max(0, data.totalUsers - 30),
                Math.max(0, data.totalUsers - 20),
                Math.max(0, data.totalUsers - 10),
                data.totalUsers
            ],
            borderColor: "#316de5",
            backgroundColor: "rgba(49, 109, 229, 0.2)",
            fill: true,
            tension: 0.4
        }]
    };

    // ✅ Book Stats Chart Data
    const bookStatsData = {
        labels: ["Stocks Available", "Unique Books", "Books Borrowed", "Book Requests"],
        datasets: [{
            label: "Book Statistics",
            data: [
                bookStats.totalStock,       
                bookStats.uniqueBooks,      
                bookStats.booksBorrowed,    
                bookStats.bookRequests      
            ],
            backgroundColor: ["#316de5", "#ff9f40", "#ffcd56", "#4bc0c0"],
            borderColor: ["#316de5", "#ff9f40", "#ffcd56", "#4bc0c0"],
            borderWidth: 1
        }]
    };

    // ✅ Initialize Both Charts After DOM Loads
    document.addEventListener("DOMContentLoaded", () => {
        // User Growth Chart
        const userCanvas = document.getElementById('userChart');
        if (userCanvas) {
            const userCtx = userCanvas.getContext('2d');
            new Chart(userCtx, {
                type: 'line',
                data: userGrowthData,
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            display: true
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                stepSize: 10
                            }
                        }
                    }
                }
            });
        }

        // Book Stats Chart
        const bookCanvas = document.getElementById('bookStatsChart');
        if (bookCanvas) {
            const bookCtx = bookCanvas.getContext('2d');
            new Chart(bookCtx, {
                type: 'bar',
                data: bookStatsData,
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            display: true
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                stepSize: 1
                            }
                        }
                    }
                }
            });
        }
    });
</script>